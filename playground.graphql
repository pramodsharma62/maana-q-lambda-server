fragment lambdaFields on Lambda {
  id
  serviceId
  runtime {
    id
  }
  code
  input {
    name
    typeSig
  }
  typeSig
}

mutation createLambda {
  createLambda(
    input: {
      id: "common+age"
      serviceId: "common"
      runtimeId: "Q+JavaScript"
      code: "const dob = new Date(input.person.dob); const dobYear = dob.getFullYear(); const now = new Date();const nowYear = now.getFullYear();output = nowYear - dobYear;"
      input: [{ name: "person", typeSig: "Person!" }]
      typeSig: "Int!"
      kinds: [{ name: "Person", fields: [{ name: "name", typeSig: "String!" }, { name: "dob", typeSig: "String!" }] }]
    }
  ) {
    ...lambdaFields
  }
}

query getLambda {
  getLambda(id: "common+age") {
    ...lambdaFields
  }
}

query listLambdas {
  listLambdas(serviceId: "common") {
    ...lambdaFields
  }
}

query listRuntimes {
  listRuntimes {
    id
    host
    language
  }
}

mutation deleteLambda {
  deleteLambda(id: "common+age")
}

mutation deleteService {
  deleteService(id: "common")
}

query listServices {
  listServices
}
